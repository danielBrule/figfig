name: Dev Deployment

on:
  push:
    branches: ["dev"]

permissions:
  id-token: write
  contents: read

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4

      - name: 🔐 Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 🧱 Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: 🚀 Init Terraform (for import)
        working-directory: terraform
        run: terraform init -backend-config="envs/dev/backend.tf"

      - name: 📦 Import Existing Azure Resources (if needed)
        working-directory: terraform
        run: |
          terraform state show azurerm_resource_group.main || terraform import azurerm_resource_group.main "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/FigFigRG-dev"
          terraform state list | grep module.acr.azurerm_container_registry.acr || terraform import module.acr.azurerm_container_registry.acr "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/FigFigRG-dev/providers/Microsoft.ContainerRegistry/registries/figfigacrdev"
          terraform state show module.network.azurerm_virtual_network.vnet || terraform import module.network.azurerm_virtual_network.vnet "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/FigFigRG-dev/providers/Microsoft.Network/virtualNetworks/my-vnet-dev"
          terraform state show module.network.azurerm_subnet.public || terraform import module.network.azurerm_subnet.public "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/FigFigRG-dev/providers/Microsoft.Network/virtualNetworks/my-vnet-dev/subnets/public-subnet-dev"

      - name: ⚙️ Terraform Apply Core (Network, ACR)
        working-directory: terraform
        run: |
          terraform init -backend-config="envs/dev/backend.tf"
          terraform apply -lock-timeout=300s -auto-approve -var-file="envs/dev/terraform.tfvars" \
            -target=module.network -target=module.acr

      - name: 🔑 Docker Login to ACR
        run: az acr login --name figfigacrdev

      - name: 🛠 Build Docker Image
        run: docker build -f docker/Dockerfile --build-arg ENV=dev -t figfigacrdev.azurecr.io/figfig-app:latest .

      - name: 📤 Push Docker Image
        run: docker push figfigacrdev.azurecr.io/figfig-app:latest

  deploy-infra:
    runs-on: ubuntu-latest
    needs: build-image

    steps:
      - name: 🔄 Checkout repository
        uses: actions/checkout@v4

      - name: 🔐 Azure Login with OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 🧱 Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: ⚙️ Terraform Apply Remaining Infra
        working-directory: terraform
        run: |
          terraform init -backend-config="envs/dev/backend.tf"
          terraform apply -lock-timeout=300s -auto-approve -var-file="envs/dev/terraform.tfvars"
