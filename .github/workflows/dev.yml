name: Dev Deployment

on:
  push:
    branches: ["dev"]

permissions:
  id-token: write
  contents: read

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Import Resource Group (if needed)
        working-directory: terraform
        run: |
          terraform import azurerm_resource_group.main /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/FigFigRG-dev || true

      - name: Terraform Init & Apply Core (Network, ACR)
        working-directory: terraform
        run: |
          terraform init -backend-config="envs/dev/backend.tf"
          terraform apply -auto-approve -var-file="envs/dev/terraform.tfvars" -target=module.network -target=module.acr

      - name: Docker Login
        run: az acr login --name figfigacrdev

      - name: Build Docker
        run: docker build -f docker/Dockerfile --build-arg ENV=dev -t figfigacrdev.azurecr.io/figfig-app:latest .

      - name: Push Docker
        run: docker push figfigacrdev.azurecr.io/figfig-app:latest

  deploy-infra:
    runs-on: ubuntu-latest
    needs: build-image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init & Apply Full Infra
        working-directory: terraform
        run: |
          terraform init -backend-config="envs/dev/backend.tf"
          terraform apply -auto-approve -var-file="envs/dev/terraform.tfvars"
